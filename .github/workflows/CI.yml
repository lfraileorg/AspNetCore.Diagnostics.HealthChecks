# This is a basic workflow to help you get started with Actions

name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]  
      
jobs:  
  build:
    services:
      sql-server:
        image: mcr.microsoft.com/mssql/server:2017-latest
        env:
          ACCEPT_EULA: Y
          MSSQL_SA_PASSWORD: Password12!
        ports:
            - 1833:1433
      postgres:
        image: postgres
        ports:
            - 5434:5432
        env:
            POSTGRES_PASSWORD: Password12!
      mysql:
        image: mysql
        ports:
            - 3306:3306
        env:
            MYSQL_ROOT_PASSWORD: Password12!
            MYSQL_USER: root
            MYSQL_PASSWORD: Password12! 
      mongodb:
        image: mongo
        ports:
            - 27017:27017
    env:
      BUILD_CONFIG: Release
      VERSION_SUFFIX: -preview${{ github.run_id }}
      PACKAGES_REPO: lfraileorg
      Appveyor: TRUE
    runs-on: ubuntu-latest    
    steps:      
      - uses: actions/checkout@v2  
                 
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x
          
      - name: Restore
        run: dotnet restore ./AspNetCore.Diagnostics.HealthChecks.sln
        
      - name: Build with dotnet
        run: dotnet build ./AspNetCore.Diagnostics.HealthChecks.sln --configuration $BUILD_CONFIG
        
      - name: dotnet test UnitTests
        run: dotnet test -c $BUILD_CONFIG --no-build
        working-directory: ./test/UnitTests

      - name: dotnet test FunctionalTests
        run: dotnet test -c $BUILD_CONFIG --no-build
        working-directory: ./test/FunctionalTests
           
      - name: dotnet pack
        run: 'dotnet pack -o ./artifacts -c $BUILD_CONFIG --version-suffix $VERSION_SUFFIX --no-build --include-source --include-symbols /p:RepositoryUrl=https://github.com/lfraileorg/AspNetCore.Diagnostics.HealthChecks'

      - name: Publish GitHub Packages
        run: |
            for f in ./artifacts/*.nupkg
            do
              echo "Publishing $f"
              dotnet nuget push $f --source https://nuget.pkg.github.com/lfraileorg/index.json --api-key ${{secrets.GITHUB_TOKEN }} --skip-duplicate
              if [ $? -eq 0 ]
              then
                echo "successfully pushed $f"
              else
                echo "failed to push $f" >&2
                exit 1
              fi
            done
        shell: bash
